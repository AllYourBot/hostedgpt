FROM postgres:16

RUN mkdir -p /docker-entrypoint-initdb.d
WORKDIR /docker-entrypoint-initdb.d

COPY /docker/01-postgres-init-rails-user.sh .

# RUN touch 01-create-rails-user.sh
# RUN echo "#!/bin/bash" >> 01-create-rails-user.sh
# RUN echo "set -e" >> 01-create-rails-user.sh
# # the script uses the DATABASE_URL env var (if set)
# # to extract the username and password and set HOSTEDGPT_DB_USERNAME and HOSTEDGPT_DB_PASSWORD
# # if DATABASE_URL is not set, it uses the existing HOSTEDGPT_DB_USERNAME and HOSTEDGPT_DB_PASSWORD
# # to create the rails user
# RUN echo "if [ -n \"\$DATABASE_URL\" ]; then" >> 01-create-rails-user.sh
# RUN echo "	echo \"DATABASE_URL is set, using it to extract username and password\"" >> 01-create-rails-user.sh
# RUN echo "	HOSTEDGPT_DB_USERNAME=\"\$(echo \$DATABASE_URL | sed -n 's|.*://\([^:]*\):.*|\\\\1|p')\"" >> 01-create-rails-user.sh
# RUN echo "	HOSTEDGPT_DB_PASSWORD=\"\$(echo \$DATABASE_URL | sed -n 's|.*://[^:]*:\([^@]*\)@.*|\\\\1|p')\"" >> 01-create-rails-user.sh
# RUN echo "fi" >> 01-create-rails-user.sh

# RUN echo "echo \"creating user \$HOSTEDGPT_DB_USERNAME\"" >> 01-create-rails-user.sh
# RUN echo "psql -v ON_ERROR_STOP=1 --username \"\$POSTGRES_USER\" <<-EOSQL" >> 01-create-rails-user.sh
# RUN echo "	CREATE USER \$HOSTEDGPT_DB_USERNAME WITH SUPERUSER PASSWORD '\$HOSTEDGPT_DB_PASSWORD';" >> 01-create-rails-user.sh
# RUN echo "EOSQL" >> 01-create-rails-user.sh

WORKDIR /
