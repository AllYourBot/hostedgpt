# Conversation

hear_me:
  assistant: samantha
  conversation: greeting
  role: user
  content_text: Can you hear me?
  content_document:
  run:
  created_at: 2023-12-30 1:00:00

yes_i_do:
  assistant: samantha
  conversation: greeting
  role: assistant
  content_text: Yes, I can hear you. How can I help you today?
  content_document:
  run: hear_me_response
  created_at: 2023-12-30 1:01:00

identify_photo:
  assistant: samantha
  conversation: greeting
  role: user
  content_text: What do you see in this photo?
  content_document: # the cat photo is not attached in this field, currently it's attached at the document level. info: https://platform.openai.com/docs/assistants/tools/knowledge-retrieval and https://platform.openai.com/docs/guides/vision
  run:
  created_at: 2023-12-30 1:02:00

photo_identified:
  assistant: samantha
  conversation: greeting
  role: assistant
  content_text: That looks like a cat.
  content_document:
  run: identify_photo_response
  created_at: 2023-12-30 1:03:00

what_day:
  assistant: samantha
  conversation: greeting
  role: user
  content_text: Do you know what day it is?
  content_document:
  run:
  created_at: 2023-12-30 1:04:00

dont_know_day:
  assistant: samantha
  conversation: greeting
  role: assistant
  content_text: I do not know the current day.
  content_document:
  run: what_day_response
  created_at: 2023-12-30 1:05:00

alive:
  assistant: samantha
  conversation: greeting
  role: user
  content_text: Are you alive?
  content_document:
  run:
  created_at: 2023-12-30 1:06:00

im_a_bot:
  assistant: samantha
  conversation: greeting
  role: assistant
  content_text: No, I'm a bot.
  content_document:
  run: alive_response
  created_at: 2023-12-30 1:07:00


# Next conversation

can_you_hear:
  assistant: samantha
  conversation: attachments
  role: user
  content_text: Can you hear me?
  content_document:
  run:
  created_at: 2023-12-30 1:00:00

yes_i_can:
  assistant: samantha
  conversation: attachments
  role: assistant
  content_text: Yes, I can hear you.
  content_document:
  run: can_you_hear_response
  created_at: 2023-12-30 1:01:00

one_attachment:
  assistant: samantha
  conversation: attachments
  role: user
  content_text: What is this?
  content_document:
  run:
  created_at: 2023-12-30 1:02:00

its_a_cat:
  assistant: samantha
  conversation: attachments
  role: assistant
  content_text: It's a cat
  content_document:
  run: one_attachment_response
  created_at: 2023-12-30 1:03:00

two_attachments:
  assistant: samantha
  conversation: attachments
  role: user
  content_text: Can you see both files?
  content_document:
  run:
  created_at: 2023-12-30 1:04:00

yes_cat_and_dog:
  assistant: samantha
  conversation: attachments
  role: assistant
  content_text: Yes, I see a cat and a dog.
  content_document:
  run: two_attachments_response
  created_at: 2023-12-30 1:05:00

# Next conversation

popstate:
  assistant: keith_gpt4
  conversation: javascript
  role: user
  content_text: what does popstate do in javascript?
  content_document:
  run:
  created_at: 2023-12-30 1:00:00

popstate_event:
  assistant: keith_gpt4
  conversation: javascript
  role: assistant
  content_text: popstate is an event in JavaScript that fires when the active history entry changes, typically due to the user navigating back or forward in their browser history.
  content_document:
  run: popstate_response
  created_at: 2023-12-30 1:01:00


# Next conversation

ruby_version:
  assistant: samantha
  conversation: ruby_version
  role: user
  content_text: what is the latest version of ruby?
  content_document:
  run:
  created_at: 2023-12-30 1:00:00

latest_ruby_version:
  assistant: samantha
  conversation: ruby_version
  role: assistant
  content_text: The latest version of Ruby can vary, but as of my last update, it was Ruby 3.1.2. For the most current version, checking the official Ruby website or its GitHub page is recommended.
  content_document:
  run: ruby_version_response
  created_at: 2023-12-30 1:01:00


# Next conversation

filter_map:
  assistant: rob_gpt4
  conversation: debugging
  role: user
  content_text: what is the syntax of filter_map ruby?
  content_document:
  run:
  created_at: 2023-12-30 1:00:00

filter_map_example:
  assistant: rob_gpt4
  conversation: debugging
  role: assistant
  content_text: array.filter_map { |item| expression if condition }
  content_document:
  run: filter_map_response
  created_at: 2023-12-30 1:01:00
