name: Ruby on Rails CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref }}-test
      cancel-in-progress: true
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:16.1
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: hostedgpt_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/hostedgpt_test"
      APP_URL_PROTOCOL: "http"
      APP_URL_HOST: "localhost"
      APP_URL_PORT: "3000"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ImageMagick
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PS" \/>/<policy domain="coder" rights="read|write" pattern="PS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="EPS" \/>/<policy domain="coder" rights="read|write" pattern="EPS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF" \/>/<policy domain="coder" rights="read|write" pattern="PDF" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="XPS" \/>/<policy domain="coder" rights="read|write" pattern="XPS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="path" rights="none" pattern="@\*" \/>/<policy domain="path" rights="read|write" pattern="@\*" \/>/' /etc/ImageMagick-6/policy.xml

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:prepare

      - name: Build CSS
        run: bin/rails tailwindcss:build

      - name: Run tests
        run: bin/rails test

  system_tests:
    if: github.repository == 'AllYourBot/hostedgpt'
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref }}-system
      cancel-in-progress: true
    services:
      postgres:
        image: postgres:16.1
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: hostedgpt_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/hostedgpt_test"
      APP_URL_PROTOCOL: "http"
      APP_URL_HOST: "localhost"
      APP_URL_PORT: "3000"
      DISPLAY: "=:99"
      CHROME_VERSION: "127.0.6533.119"

    steps:
      - name: Install Chrome
        run: |
          # Download specific Chrome version
          wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}-1_amd64.deb
          # Install Chrome
          sudo apt-get install -y --allow-downgrades ./google-chrome-stable_${CHROME_VERSION}-1_amd64.deb

      - uses: nanasess/setup-chromedriver@v2
      - name: Start chromedriver
        run: |
          set -x
          chromedriver --url-base=/wd/hub &
          # sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install ImageMagick
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PS" \/>/<policy domain="coder" rights="read|write" pattern="PS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="EPS" \/>/<policy domain="coder" rights="read|write" pattern="EPS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF" \/>/<policy domain="coder" rights="read|write" pattern="PDF" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="XPS" \/>/<policy domain="coder" rights="read|write" pattern="XPS" \/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="path" rights="none" pattern="@\*" \/>/<policy domain="path" rights="read|write" pattern="@\*" \/>/' /etc/ImageMagick-6/policy.xml

      - name: Set up database schema
        run: bin/rails db:prepare

      - name: Build CSS
        run: bin/rails tailwindcss:build

      - name: Run system tests
        run: |
          sed -i 's/hoverOnlyWhenSupported: true/hoverOnlyWhenSupported: false/' config/tailwind.config.js
          PARALLEL_WORKERS=2 bin/rails test:system

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: System Test Screenshots
          path: tmp/screenshots/
          if-no-files-found: ignore

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref }}-lint
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint Ruby files
        run: bin/rubocop
