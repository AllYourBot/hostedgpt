<%# locals: (message:, scroll_down: false, only_scroll_down_if_was_bottom: false, request_id: nil, timestamp: nil, thinking: nil, message_counter: -1) -%>
<%# request_id is not used, but broadcasting turbo stream messages provides it as a local so it needs to be accepted %>

<% max_index = message.conversation.messages.length - 1 %>
<% last_message = message_counter == max_index %>
<% initial_page_load = last_message && !scroll_down %>
<% scroll_down = scroll_down || initial_page_load %>
<% thinking = if thinking.nil?
                (last_message && message.content_text.blank?) ||
                (message.rerequested? && message.content_text.blank?)
              else
                thinking
              end
%>

<div
  id="<%= dom_id message %>"
  class="mb-5 ml-9 sm:ml-3 md:ml-8 group"
  data-role="message"
  data-timestamp="<%= timestamp %>"
  data-controller="<%= (scroll_down || only_scroll_down_if_was_bottom) && 'message-scroller' %>"
  data-message-scroller-scroll-down-value="<%= scroll_down %>"
  data-message-scroller-instantly-value="<%= initial_page_load %>"
  data-message-scroller-only-scroll-down-if-scrolled-to-bottom-value="<%= only_scroll_down_if_was_bottom %>"
>
  <div class="flex">
    <div class="flex flex-col items-center w-6 ml-1">
      <% if message.user? %>
        <%= render partial: "layouts/user_avatar", locals: { user: Current.user, size: 7, classes: "mt-1" } %>
      <% else %>
        <%= render partial: "layouts/assistant_avatar", locals: { assistant: message.assistant, size: 7, classes: "mt-1" } %>
      <% end %>
    </div>

    <!-- Right Column -->
    <div  data-controller="clipboard transition"
          data-transition-toggle-class="hidden"
          class="flex-1 min-w-0 ml-3 mr-8 text-base text-gray-950 dark:text-gray-100">

      <div class="mt-[6px] mb-1 font-semibold" data-role="from">
        <%= message.user? ? 'You' : message.assistant.name %>
      </div>

      <% if message.documents.present? && message.documents.first.file.attached? %>
        <%= image_tag message.documents.first.file, class: "w-full h-auto border-2 border-gray-100 rounded-md" %>
      <% end %>

      <div class="hidden" data-clipboard-target="text"><%= message.content_text %></div>
      <div
        data-role="content-text"
        class="prose break-words leading-normal"
        <%= thinking && "data-turbo-permanent" %>
      >
        <%= formatted_text = format message.content_text,
              append_inside_tag: span_tag("", class: %|
                animate-breathe
                w-3 h-3
                rounded-full
                bg-black dark:bg-white
                inline-block
                ml-1
                #{!thinking && 'hidden'}
              |)
        %>
      </div>

      <div class="flex justify-start invisible gap-2 text-gray-600 dark:text-gray-300 group-hover:visible">
        <% if message.user? %>
          <%= button_tag type: "button",
                data: {
                  role: "edit",
                },
                class: "cursor-pointer hover:text-gray-900 dark:hover:text-white" do
          %>
            <%= icon "pencil", variant: :outline, size: 18, title: "Edit" %>
          <% end %>
        <% else %>
          <%= button_tag type: "button",
                class: "cursor-pointer hover:text-gray-900 dark:hover:text-white",
                data: {
                  role: "clipboard",
                  action: %|
                    clipboard#copy
                    transition#toggleClassOn
                    mouseleave->transition#toggleClassOff
                  |,
                  keyboard_target: formatted_text.present? && formatted_text.exclude?('keyboard-target') ? "keyboardable" : nil,
                  # ^ ensure the keyboard shortcut is only attached if there is text && if this text does not contain a code block
          } do %>
            <%= icon "clipboard", variant: :outline, size: 18, title: "Copy", data: { transition_target: "transitionable" } %>
            <%= icon "check", variant: :outline, size: 18, title: "Copied!", data: { transition_target: "transitionable" }, class: "hidden" %>
          <% end %>

          <div class="dropdown dropdown-top">
            <%= icon "arrow-path",
              tabindex: 0,
              role: :button,
              variant: :outline,
              size: 18,
              title: "Regenerate",
              data: { role: "regenerate" }
            %>

            <menu tabindex="0" class="dropdown-content -ml-6 z-10 menu p-2 shadow-xl bg-base-100 rounded-box w-52 dark:!bg-gray-700">
              <% ([message.assistant] + message.user.assistants.ordered.excluding(message.assistant)).each do |assistant| %>
                <li class="overflow-hidden">
                  <%= button_to message_path(message),
                    form_class: "inline-block p-0",
                    class: "truncate w-full py-2 px-4 text-left",
                    method: :patch,
                    params: { message: {
                      content_text: nil,
                      rerequested_at: Time.current,
                      assistant_id: assistant.id
                    } } do
                  %>
                    Using <%= assistant.name %>
                  <% end %>
                </li>
              <% end %>
            </menu>
          </div>

        <% end %>
      </div>
    </div>
  </div>
</div>
